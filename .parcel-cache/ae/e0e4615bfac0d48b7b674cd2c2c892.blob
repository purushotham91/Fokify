'use strict';
import   "f0e154539ce3a8789e104749c719d604:../internals/export";
import   "f0e154539ce3a8789e104749c719d604:../internals/a-function";
import   "f0e154539ce3a8789e104749c719d604:../internals/to-object";
import   "f0e154539ce3a8789e104749c719d604:../internals/to-length";
import   "f0e154539ce3a8789e104749c719d604:../internals/fails";
import   "f0e154539ce3a8789e104749c719d604:../internals/array-sort";
import   "f0e154539ce3a8789e104749c719d604:../internals/array-method-is-strict";
import   "f0e154539ce3a8789e104749c719d604:../internals/engine-ff-version";
import   "f0e154539ce3a8789e104749c719d604:../internals/engine-is-ie-or-edge";
import   "f0e154539ce3a8789e104749c719d604:../internals/engine-v8-version";
import   "f0e154539ce3a8789e104749c719d604:../internals/engine-webkit-version";
var $f0e154539ce3a8789e104749c719d604$var$test = [];
var $f0e154539ce3a8789e104749c719d604$var$nativeSort = $f0e154539ce3a8789e104749c719d604$var$test.sort;
// IE8-
var $f0e154539ce3a8789e104749c719d604$var$FAILS_ON_UNDEFINED = $f0e154539ce3a8789e104749c719d604$import$9936d02511e757dc(function() {
    $f0e154539ce3a8789e104749c719d604$var$test.sort(undefined);
});
// V8 bug
var $f0e154539ce3a8789e104749c719d604$var$FAILS_ON_NULL = $f0e154539ce3a8789e104749c719d604$import$9936d02511e757dc(function() {
    $f0e154539ce3a8789e104749c719d604$var$test.sort(null);
});
// Old WebKit
var $f0e154539ce3a8789e104749c719d604$var$STRICT_METHOD = $f0e154539ce3a8789e104749c719d604$import$f597927de08feb79('sort');
var $f0e154539ce3a8789e104749c719d604$var$STABLE_SORT = !$f0e154539ce3a8789e104749c719d604$import$9936d02511e757dc(function() {
    // feature detection can be too slow, so check engines versions
    if ($f0e154539ce3a8789e104749c719d604$import$aa08777f3c690dd7) return $f0e154539ce3a8789e104749c719d604$import$aa08777f3c690dd7 < 70;
    if ($f0e154539ce3a8789e104749c719d604$import$2eff4d17d400a701 && $f0e154539ce3a8789e104749c719d604$import$2eff4d17d400a701 > 3) return;
    if ($f0e154539ce3a8789e104749c719d604$import$9817820b129c4cb7) return true;
    if ($f0e154539ce3a8789e104749c719d604$import$b04d4b6e501858a8) return $f0e154539ce3a8789e104749c719d604$import$b04d4b6e501858a8 < 603;
    var result = '';
    var code, chr, value, index;
    // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
    for(code = 65; code < 76; code++){
        chr = String.fromCharCode(code);
        switch(code){
            case 66:
            case 69:
            case 70:
            case 72:
                value = 3;
                break;
            case 68:
            case 71:
                value = 4;
                break;
            default:
                value = 2;
        }
        for(index = 0; index < 47; index++)$f0e154539ce3a8789e104749c719d604$var$test.push({
            k: chr + index,
            v: value
        });
    }
    $f0e154539ce3a8789e104749c719d604$var$test.sort(function(a, b) {
        return b.v - a.v;
    });
    for(index = 0; index < $f0e154539ce3a8789e104749c719d604$var$test.length; index++){
        chr = $f0e154539ce3a8789e104749c719d604$var$test[index].k.charAt(0);
        if (result.charAt(result.length - 1) !== chr) result += chr;
    }
    return result !== 'DGBEFHACIJK';
});
var $f0e154539ce3a8789e104749c719d604$var$FORCED = $f0e154539ce3a8789e104749c719d604$var$FAILS_ON_UNDEFINED || !$f0e154539ce3a8789e104749c719d604$var$FAILS_ON_NULL || !$f0e154539ce3a8789e104749c719d604$var$STRICT_METHOD || !$f0e154539ce3a8789e104749c719d604$var$STABLE_SORT;
var $f0e154539ce3a8789e104749c719d604$var$getSortCompare = function(comparefn) {
    return function(x, y) {
        if (y === undefined) return -1;
        if (x === undefined) return 1;
        if (comparefn !== undefined) return +comparefn(x, y) || 0;
        return String(x) > String(y) ? 1 : -1;
    };
};
// `Array.prototype.sort` method
// https://tc39.es/ecma262/#sec-array.prototype.sort
$f0e154539ce3a8789e104749c719d604$import$1bb3f1a3ac631152({
    target: 'Array',
    proto: true,
    forced: $f0e154539ce3a8789e104749c719d604$var$FORCED
}, {
    sort: function sort(comparefn) {
        if (comparefn !== undefined) $f0e154539ce3a8789e104749c719d604$import$feed022c18f6196b(comparefn);
        var array = $f0e154539ce3a8789e104749c719d604$import$565dce0892f29b05(this);
        if ($f0e154539ce3a8789e104749c719d604$var$STABLE_SORT) return comparefn === undefined ? $f0e154539ce3a8789e104749c719d604$var$nativeSort.call(array) : $f0e154539ce3a8789e104749c719d604$var$nativeSort.call(array, comparefn);
        var items = [];
        var arrayLength = $f0e154539ce3a8789e104749c719d604$import$4102f61a7d1ec5ae(array.length);
        var itemsLength, index;
        for(index = 0; index < arrayLength; index++)if (index in array) items.push(array[index]);
        items = $f0e154539ce3a8789e104749c719d604$import$b7bde77fbad56186(items, $f0e154539ce3a8789e104749c719d604$var$getSortCompare(comparefn));
        itemsLength = items.length;
        index = 0;
        while(index < itemsLength)array[index] = items[index++];
        while(index < arrayLength)delete array[index++];
        return array;
    }
});
